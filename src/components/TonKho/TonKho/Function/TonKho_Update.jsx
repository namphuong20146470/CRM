import React, { useState, useEffect } from 'react';
import { Form, Input, InputNumber, Button, Card, message, Select, DatePicker, Spin, Row, Col } from 'antd';
import { SaveOutlined, CloseOutlined } from '@ant-design/icons';
import { dayjs } from '../../../utils/format/dayjs-config';
import { fetchDataList, updateItemById } from '../../../utils/api/requestHelpers';
import { fetchAndSetList } from '../../../utils/api/fetchHelpers';
import '../../../utils/css/Custom-Update.css';

const { Option } = Select;

const Editstock_in = ({ stock_inId, onCancel, onSuccess }) => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);
  const [fetchLoading, setFetchLoading] = useState(true);
  const [stock_inData, setStockInData] = useState(null);
  const [suppliers, setSuppliers] = useState([]);
  const [warehouses, setWarehouses] = useState([]);
  const [bills, setBills] = useState([]);
  const [contracts, setContracts] = useState([]);

  useEffect(() => {
    if (stock_inId) fetchStockInData(stock_inId);
    fetchAndSetList('https://dx.hoangphucthanh.vn:3000/warehouse/suppliers', setSuppliers, 'Kh√¥ng th·ªÉ t·∫£i danh s√°ch nh√† cung c·∫•p');
    fetchAndSetList('https://dx.hoangphucthanh.vn:3000/warehouse/warehouses', setWarehouses, 'Kh√¥ng th·ªÉ t·∫£i danh s√°ch kho');
    fetchAndSetList('https://dx.hoangphucthanh.vn:3000/warehouse/bills', setBills, 'Kh√¥ng th·ªÉ t·∫£i danh s√°ch bill');
    fetchAndSetList('https://dx.hoangphucthanh.vn:3000/warehouse/contracts', setContracts, 'Kh√¥ng th·ªÉ t·∫£i danh s√°ch h·ª£p ƒë·ªìng');
  }, [stock_inId]);

  const fetchStockInData = async (id) => {
    setFetchLoading(true);
    try {
      const allStock_In = await fetchDataList('https://dx.hoangphucthanh.vn:3000/warehouse/stock-in');
      const stock_in = allStock_In.find(item => item.ma_stock_in === id);
      if (!stock_in) throw new Error(`Kh√¥ng t√¨m th·∫•y nh·∫≠p h√†ng v·ªõi m√£: ${id}`);
      setStockInData(stock_in);
      form.setFieldsValue({
        ...stock_in,
        ngay_nhap_hang: stock_in.ngay_nhap_hang ? dayjs(stock_in.ngay_nhap_hang) : null,
      });   
      message.success(`ƒê√£ t·∫£i th√¥ng tin nh·∫≠p h√†ng: ${stock_in.ma_hang}`);
    } catch (error) {
      console.error('L·ªói t·∫£i d·ªØ li·ªáu:', error);
      message.error(error.message);
    } finally {
      setFetchLoading(false);
    }
  };

  const onFinish = async (values) => {
    setLoading(true);
    try {
      const payload = {
        ...values,
        ngay_nhap_hang: values.ngay_nhap_hang?.format('YYYY-MM-DD'),
      };

      console.log('üöÄ Payload g·ª≠i ƒëi:', payload);
      
      const response = await updateItemById(`https://dx.hoangphucthanh.vn:3000/warehouse/stock-in/${stock_inId}`, payload);

      console.log('üì¶ K·∫øt qu·∫£ c·∫≠p nh·∫≠t:', response);

      // Ki·ªÉm tra n·∫øu response l√† l·ªói
      if (response && response.status && response.status >= 400) {
        throw new Error('C·∫≠p nh·∫≠t th·∫•t b·∫°i t·ª´ server');
      }
      
      message.success('C·∫≠p nh·∫≠t nh·∫≠p h√†ng th√†nh c√¥ng!');
      onSuccess?.();
    } catch (error) {
      console.error('L·ªói c·∫≠p nh·∫≠t:', error);
      message.error('Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t nh·∫≠p h√†ng');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="edit-container">
      <Card
        title={`Ch·ªânh s·ª≠a Nh·∫≠p H√†ng: ${stock_inData?.ma_hang || stock_inId}`}
        bordered={false}
        className="edit-card"
      >
        {fetchLoading ? (
          <div className="loading-container">
            <Spin tip="ƒêang t·∫£i d·ªØ li·ªáu..." />
          </div>
        ) : (
          <Form form={form} layout="vertical" onFinish={onFinish} className="edit-form">
            <Row gutter={16}>
              <Col span={12}>
                <Form.Item name="ma_stock_in" label="M√£ nh·∫≠p" rules={[{ required: true }]}>
                  <Input disabled />
                </Form.Item>
              </Col>
              <Col span={12}>
                <Form.Item name="ma_hang" label="M√£ h√†ng" rules={[{ required: true }]}>
                  <Input />
                </Form.Item>
              </Col>
            </Row>
            <Row gutter={16}>
              <Col span={12}>
                <Form.Item name="ngay_nhap_hang" label="Ng√†y nh·∫≠p h√†ng" rules={[{ required: true }]}>
                  <DatePicker format="DD/MM/YYYY" style={{ width: '100%' }} />
                </Form.Item>
              </Col>
              <Col span={12}>
                <Form.Item name="so_luong_nhap" label="S·ªë l∆∞·ª£ng" rules={[{ required: true }]}>
                  <InputNumber style={{ width: '100%' }} />
                </Form.Item>
              </Col>
            </Row>
            <Row gutter={16}>
              <Col span={12}>
                <Form.Item name="ten_nha_cung_cap" label="Nh√† cung c·∫•p" rules={[{ required: true }]}>
                  <Select showSearch optionFilterProp="children" placeholder="Ch·ªçn nh√† cung c·∫•p">
                    {suppliers.map(supplier => (
                      <Option key={supplier.ma_nha_cung_cap} value={supplier.ma_nha_cung_cap}>
                        {supplier.ten_nha_cung_cap}
                      </Option>
                    ))}
                  </Select>
                </Form.Item>
              </Col>
              <Col span={12}>
                <Form.Item name="ten_kho" label="Kho" rules={[{ required: true }]}>
                  <Select showSearch optionFilterProp="children" placeholder="Ch·ªçn kho">
                    {warehouses.map(warehouse => (
                      <Option key={warehouse.ma_kho} value={warehouse.ma_kho}>
                        {warehouse.ten_kho}
                      </Option>
                    ))}
                  </Select>
                </Form.Item>
              </Col>
            </Row>
            <Row gutter={16}>
              <Col span={12}>
                <Form.Item name="ma_bill" label="M√£ Bill" rules={[{ required: true }]}>
                  <Select showSearch optionFilterProp="children" placeholder="Ch·ªçn m√£ bill">
                    {bills.map(bill => (
                      <Option key={bill.ma_bill} value={bill.ma_bill}>
                        {bill.ma_bill}
                      </Option>
                    ))}
                  </Select>
                </Form.Item>
              </Col>
              <Col span={12}>
                <Form.Item name="ma_hop_dong" label="S·ªë h·ª£p ƒë·ªìng" rules={[{ required: true }]}>
                  <Select showSearch optionFilterProp="children" placeholder="Ch·ªçn h·ª£p ƒë·ªìng">
                    {contracts.map(contract => (
                      <Option key={contract.so_hop_dong} value={contract.so_hop_dong}>
                        {contract.so_hop_dong}
                      </Option>
                    ))}
                  </Select>
                </Form.Item>
              </Col>
            </Row>
            <div className="form-actions">
              <Button type="primary" htmlType="submit" icon={<SaveOutlined />} loading={loading}>
                L∆∞u
              </Button>
              <Button icon={<CloseOutlined />} onClick={onCancel} danger>
                H·ªßy
              </Button>
            </div>
          </Form>
        )}
      </Card>
    </div>
  );
};

export default Editstock_in;
